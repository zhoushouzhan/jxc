import{a as x,r as k,w as p,g as w,o as B,b as D,d as l,e as o,q as m,i as n,t as b,F as f,f as C}from"./index-ddd32adc.js";const F={class:"w-24 text-right pr-5 flex-shrink-0"},N={class:"flex-1"},j={class:"grid grid-cols-6 gap-3"},E={__name:"sclass",props:{modelValue:{default:[]},cid:{default:0}},emits:["update:modelValue"],setup(g,{emit:_}){const d=g,v=_,a=x(0),i=k([]);p(()=>d.cid,e=>{r(e)}),p(a,e=>{v("update:modelValue",e)});const r=async e=>{if(!e)return;a.length=0;const t=await w("Classify/getchild",{id:e});t.code==1&&(i.length=0,Object.keys(t.data).map(s=>{i[s]=t.data[s]}))};return B(()=>{r(d.cid),a.value=d.modelValue}),(e,t)=>{const s=D("ypradio");return l(!0),o(f,null,m(i,(c,h)=>(l(),o("div",{class:"flex items-center",key:h},[n("div",F,b(c.title),1),n("div",N,[n("div",j,[(l(!0),o(f,null,m(c.children,(u,V)=>(l(),o("div",{key:V},[C(s,{title:u.title,value:u.id,modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=y=>a.value=y)},null,8,["title","value","modelValue"])]))),128))])])]))),128)}}};export{E as default};
